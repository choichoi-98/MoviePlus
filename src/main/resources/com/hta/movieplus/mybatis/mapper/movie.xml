<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hta.movieplus.mybatis.mapper.MovieMapper">

	<!-- movie db 첫번째 ajax -->
	<insert id="insert" parameterType="movie">
		INSERT INTO MOVIE
		(movie_Code, movie_Title, movie_Director, 
		  movie_Genre, movie_OpenDate, movie_Release)
		VALUES (#{movie_Code}, #{movie_Title}, #{movie_Director}
		      ,#{movie_Genre}, #{movie_OpenDate} , #{movie_Release} )
	</insert>
	
	<select id="select" resultType="movie">
		SELECT * FROM MOVIE
		WHERE movie_code = #{movie_Code}
	</select>
	
	<select id="selectMovieCode" resultType="java.lang.String">
		SELECT movie_code FROM MOVIE
	</select>
	
	<!-- movie db 두번째 ajax update -->
	<update id="updateActors">
		UPDATE MOVIE
		SET MOVIE_ACTORS = #{actors}
		, MOVIE_RUNTIME = #{showTm}
		, MOVIE_GRADE = #{watchGradeNm}
		WHERE
		movie_code = #{movieCd}
	</update>
	
	<!-- movie db 세번째 ajax update -->
	<update id="updatePoster">
		UPDATE MOVIE
		SET MOVIE_POSTER = #{posterUrl},
		MOVIE_STILL = #{stillUrl},
		MOVIE_PLOT = #{plotText}
		WHERE
		MOVIE_CODE = #{codeNo}
	</update>

	<select id="selectMovieTitle" resultType="movie">
		SELECT movie_Code, movie_Title, movie_Director
		FROM MOVIE
	</select>
	
	
	<select id="getMovieListAll" resultType="movie">
		SELECT *
		FROM MOVIE
	</select>
	
	<select id="getListcount" resultType="int">
		select count(*) from movie
	</select>
	
	<select id="getMovieList" resultType="movie">
		SELECT *
		FROM (
		    SELECT ROWNUM AS row_num, MOVIE_CODE, MOVIE_TITLE, MOVIE_DIRECTOR, MOVIE_SCREEN
		    FROM (
		        SELECT MOVIE_CODE, MOVIE_TITLE, MOVIE_DIRECTOR, MOVIE_SCREEN, ROWNUM AS rnum
		        FROM MOVIE
		    )
		    WHERE rnum &lt;= #{end}
		)
		WHERE row_num &gt;= #{start}


    </select>
    
    <!-- 메인 로그인한 경우  -->
    <select id="getPlayingMovieLoginMain" resultType="movie">
    	SELECT M.MOVIE_CODE, M.MOVIE_TITLE, M.MOVIE_SCREEN, M.MOVIE_POSTER, 
    		   M.MOVIE_STILL, M.MOVIE_PLOT, M.MOVIE_OPENDATE, M.MOVIE_GRADE,
    		   MEM.MEMBER_ID, MD.MOVIE_DIBS_OBJECT
		FROM MOVIE M
		     CROSS JOIN MEMBER MEM
		     LEFT OUTER JOIN MOVIE_DIBS MD ON M.MOVIE_CODE = MD.MOVIE_DIBS_OBJECT
		WHERE MOVIE_SCREEN = '상영중'
		AND MEM.MEMBER_ID = #{memberId}
    </select>
	
	<!-- 메인 로그인 x 경우 -->
	<select id="getPlayingMovieMain" resultType="movie">
    	SELECT MOVIE_CODE, MOVIE_TITLE, MOVIE_SCREEN, MOVIE_POSTER, 
    		   MOVIE_STILL, MOVIE_PLOT, MOVIE_OPENDATE, MOVIE_GRADE
		FROM MOVIE
		WHERE MOVIE_SCREEN = '상영중'
		
    </select>

	<!-- 메인-로그인한 경우 상영 중 영화 목록 -->
    <select id="getPlayingMovieLoginMain1" resultType="movie">
    	SELECT M.MOVIE_CODE, M.MOVIE_TITLE, M.MOVIE_SCREEN, M.MOVIE_POSTER, 
    		   M.MOVIE_STILL, M.MOVIE_PLOT, M.MOVIE_OPENDATE, M.MOVIE_GRADE,
    		   MEM.MEMBER_ID, MD.MOVIE_DIBS_OBJECT
		FROM MOVIE M
		     CROSS JOIN MEMBER MEM
		     LEFT OUTER JOIN MOVIE_DIBS MD ON M.MOVIE_CODE = MD.MOVIE_DIBS_OBJECT
		WHERE MOVIE_SCREEN = '상영중'
		AND MEM.MEMBER_ID = #{memberId}
		<include refid="search_"/>
    </select>
    
    <!--영화 목록-로그인한 경우 검색 -->
    <select id="getPlayingMovieLogin" resultType="movie">
    	SELECT M.MOVIE_CODE, M.MOVIE_TITLE, M.MOVIE_SCREEN, M.MOVIE_POSTER, 
    		   M.MOVIE_STILL, M.MOVIE_PLOT, M.MOVIE_OPENDATE, M.MOVIE_GRADE,
    		   MEM.MEMBER_ID, MD.MOVIE_DIBS_OBJECT
		FROM MOVIE M
		     CROSS JOIN MEMBER MEM
		     LEFT OUTER JOIN MOVIE_DIBS MD ON M.MOVIE_CODE = MD.MOVIE_DIBS_OBJECT
		WHERE MOVIE_SCREEN = '상영중'
		AND MEM.MEMBER_ID = #{memberId}
		<include refid="search_"/>
    </select>
    
    <!-- 영화 목록-로그인x 검색 -->
     <select id="getPlayingMovieList" resultType="movie">
    	SELECT MOVIE_CODE, MOVIE_TITLE, MOVIE_SCREEN, MOVIE_POSTER, 
    		   MOVIE_STILL, MOVIE_PLOT, MOVIE_OPENDATE, MOVIE_GRADE
		FROM MOVIE
		WHERE MOVIE_SCREEN = '상영중'
		<include refid="search_"/>
    </select>
    
    <sql id="search_">
    	<if test='search_word != null and search_word != ""'>
    		and
    		MOVIE_TITLE like #{search_word}
    	</if>
    </sql>
    
    <!-- 관리자 - 상영 중 영화 목록 -->
    <select id="getPlayingMovieListAdmin" resultType="movie">
    	SELECT MOVIE_CODE, MOVIE_TITLE, MOVIE_SCREEN, MOVIE_POSTER, 
    		   MOVIE_STILL, MOVIE_PLOT, MOVIE_OPENDATE, MOVIE_GRADE
		FROM MOVIE
		WHERE MOVIE_SCREEN = '상영중'
    </select>

	<!-- 관리자 - 상영 종료 영화 목록 -->
    <select id="getEndedMovieList" resultType="movie">
    	SELECT MOVIE_CODE, MOVIE_TITLE, MOVIE_SCREEN
		FROM MOVIE
		WHERE MOVIE_SCREEN = '상영종료'
    </select>

	<!-- 관리자 - 상영 중으로 update -->
	<update id="moviePlayUpdate" parameterType="java.lang.String">
		UPDATE MOVIE
		SET MOVIE_SCREEN = '상영중'
		WHERE MOVIE_CODE = #{movieCode}
	</update>

	<!-- 관리자 - 상영 종료로 update -->
	<update id="movieEndedUpdate" parameterType="java.lang.String">
		UPDATE MOVIE
		SET MOVIE_SCREEN = '상영종료'
		WHERE MOVIE_CODE = #{movieCode}
	</update>
	
	<!-- 유저 - 보고싶어요 영화 추가 -->
	<insert id="addMovieDibs" parameterType="java.lang.String">
	INSERT INTO MOVIE_DIBS
	VALUES(movie_dibs_seq.nextval, #{memberId}, #{movieCode})
	</insert>

	<!-- 유저 - 보고싶어요 영화 삭제  -->
	<delete id="deleteMovieDibs">
	DELETE MOVIE_DIBS
	WHERE MEMBER_ID = #{memberId}
	AND MOVIE_DIBS_OBJECT = #{movieCode}
	</delete>
	
	<!-- 로그인 x 영화 상세 정보 -->
	<select id="getMovieDetail" parameterType="java.lang.String" resultType="movie">
		SELECT MOVIE_TITLE, MOVIE_POSTER, MOVIE_GRADE, MOVIE_PLOT,
 				MOVIE_DIRECTOR, MOVIE_GENRE, MOVIE_RUNTIME,
 				MOVIE_OPENDATE, MOVIE_ACTORS, MOVIE_CODE
		FROM MOVIE
		WHERE MOVIE_CODE = #{movieCode} 
	</select>
	
	<!-- 로그인 한 경우 영화 상세 정보 -->
	<select id="getMovieDetailLogin" resultType="movie">
    	SELECT M.MOVIE_CODE, M.MOVIE_TITLE, M.MOVIE_SCREEN, M.MOVIE_POSTER, 
    		   M.MOVIE_STILL, M.MOVIE_PLOT, M.MOVIE_OPENDATE, M.MOVIE_GRADE,
    		   MEM.MEMBER_ID, MD.MOVIE_DIBS_OBJECT
		FROM MOVIE M
		     CROSS JOIN MEMBER MEM
		     LEFT OUTER JOIN MOVIE_DIBS MD ON M.MOVIE_CODE = MD.MOVIE_DIBS_OBJECT
		WHERE M.MOVIE_CODE = #{movieCode}
		AND MEM.MEMBER_ID = #{memberId}	
	</select>
	
</mapper>
