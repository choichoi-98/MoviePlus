<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hta.movieplus.mybatis.mapper.StoreMapper">

	<insert id="insertItem" parameterType="StoreVO">
		insert into STORE_ITEM(ITEM_CODE, ITEM_MENU, ITEM_NAME, ITEM_PRICE, ITEM_FILE, ITEM_PATH)
		values(#{ITEM_CODE}, #{ITEM_MENU}, #{ITEM_NAME}, #{ITEM_PRICE}, #{ITEM_FILE}, #{ITEM_PATH})	
	</insert>
	
	<insert id="cartInsert" parameterType="CartVO">
    <selectKey resultType="int" order="BEFORE" keyProperty="CART_NUM">
        select nvl(max(CART_NUM), 0) + 1 from STORE_CART
    </selectKey>
    	insert into STORE_CART(CART_NUM, ITEM_CODE, MEMBER_ID, ITEM_CNT)
        values (#{CART_NUM}, #{ITEM_CODE}, #{MEMBER_ID}, #{ITEM_CNT})
	</insert>
	
	<insert id="payInsert">
	<selectKey resultType="int" order="BEFORE" keyProperty="PAY_NUM">
		select nvl(max(PAY_NUM), 0) + 1 from STORE_PAY
	</selectKey>
		insert into STORE_PAY(PAY_NUM, PAY_NAME, PAY_AMOUNT, MEMBER_ID, PAY_MENU)
		values(#{PAY_NUM}, #{itemDisplay}, #{totalPrice}, #{MEMBER_ID}, #{cartItemMenus})
	</insert>
	
	<insert id="createCoupon">
	<selectKey resultType="int" order="BEFORE" keyProperty="COUPON_NUM">
		select nvl(max(COUPON_NUM), 0) + 1 from COUPON
	</selectKey>
		insert into COUPON(COUPON_NUM, COUPON_CODE, PAY_NUM, COUPON_TYPE, COUPON_VALUE)
		values(#{COUPON_NUM}, #{Code}, #{PAY_NUM}, #{COUPON_TYPE}, #{COUPON_VALUE})
	</insert>
	
	<update id="insertPgToken">
    	UPDATE STORE_PAY
    	SET pg_token = #{pg_token},
        PAY_DATE = #{today}
    	WHERE pg_token IS NULL
    	AND PAY_NUM = (SELECT MAX(PAY_NUM) 
    				   FROM STORE_PAY 
    				   WHERE pg_token IS NULL)
    	AND NOT EXISTS (SELECT 1 FROM STORE_PAY WHERE pg_token = #{pg_token})
	</update>
	
	<select id="getItemListCount" resultType="int">
		select count(*) 
		from STORE_ITEM
	</select>
	
	<select id="getItemList" parameterType="java.util.Map" resultType="StoreVO">
		select * from 
				(select rownum rnum, b.*
				from
					 ( select * from STORE_ITEM
					 ) b
				where rownum &lt; = #{end}	 
				)
		where rnum &gt;=#{start} and rnum &lt;=#{end}
		ORDER BY ITEM_CODE ASC 
	</select>
	
	<select id="selectApproved" resultType="StorePayVO">
		SELECT *
		FROM STORE_PAY 
		WHERE pg_token IS NOT NULL
		ORDER BY PAY_NUM DESC
	</select>
	
	<select id="getStoreCouponList" resultType="PayCouponDTO">
		SELECT *
		FROM STORE_PAY
		LEFT JOIN COUPON
		ON STORE_PAY.PAY_NUM = COUPON.PAY_NUM
		WHERE STORE_PAY.pg_token IS NOT NULL
		ORDER BY STORE_PAY.PAY_NUM DESC
	</select>
	
	<select id="getStoreCoupon" resultType="StorePayVO">
		SELECT PAY_NUM
		FROM STORE_PAY 
		WHERE pg_token IS NOT NULL
	</select>
	
	<select id="getPayList" resultType="StorePayVO">
		select * from STORE_PAY
	</select>
	
	<select id="getPayMenuByNum" resultType="String">
		select PAY_MENU from STORE_PAY
		where PAY_NUM = #{PAY_NUM}
	</select>
	
	<select id="getCartList" resultType="StoreVO">
		select * from STORE_ITEM
		inner join STORE_CART
		on STORE_ITEM.ITEM_CODE = STORE_CART.ITEM_CODE
	</select>
	
	<select id="getCouponList" resultType="CouponVO">
		select * from COUPON
	</select>
	
	<select id="getCartLists" resultType="StoreCartDTO">
		select * from STORE_ITEM
		inner join STORE_CART
		on STORE_ITEM.ITEM_CODE = STORE_CART.ITEM_CODE
	</select>
	
	<select id="getCartList2" resultType="CartVO">
		select * from STORE_CART
	</select>
	
	<select id="getItemListByKind" parameterType="StoreVO" resultType="StoreVO">
		select * from STORE_ITEM
		where ITEM_MENU = #{ITEM_MENU}
		order by ITEM_CODE asc
	</select>
	
	<select id="get1item" parameterType="int" resultType="StoreVO">
    	SELECT * FROM STORE_ITEM 
    	WHERE ITEM_CODE = #{ITEM_CODE}
	</select>
	
	<select id="getItemListByCodes" parameterType="java.util.Map">
		select * from STORE_ITEM
		where ITEM_CODE = #{ITEM_CODE}
	</select>
	
	<select id="seleteItem" parameterType="StoreVO">
		select * from STORE_ITEM
		where ITEM_CODE = #{ITEM_CODE}
	</select>
	
	<update id="updateItem" parameterType="StoreVO">
		UPDATE STORE_ITEM
		SET ITEM_NAME = #{ITEM_NAME}, ITEM_PRICE = #{ITEM_PRICE}, 
		ITEM_FILE = #{ITEM_FILE}, ITEM_PATH = #{ITEM_PATH}
		WHERE ITEM_CODE = #{ITEM_CODE}
	</update>
	
	<delete id="deleteItem" parameterType="int">
		DELETE 
		FROM STORE_ITEM
		WHERE ITEM_CODE = #{ITEM_CODE}
	</delete>
	
	<delete id="delCartItem" parameterType="CartVO">
		delete 
		from STORE_CART
		where ITEM_CODE = #{ITEM_CODE}
		and MEMBER_ID = #{MEMBER_ID}
	</delete>
	
	<delete id="deletePaidItem" parameterType="int">
		delete 
		from STORE_PAY
		where PAY_NUM = #{PAY_NUM}
	</delete>
	
	<delete id="clearCart">
		delete  
		from STORE_CART
	</delete>

</mapper>