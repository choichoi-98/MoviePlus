<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hta.movieplus.mybatis.mapper.ChatMapper">
	<!-- 친구 목록 -->
	<select id="getManagerList" parameterType="String" resultType="member">
		SELECT *
		FROM member
		WHERE member_id != #{memberId}
		AND (member_auth = 'ROLE_MANAGER' OR member_auth = 'ROLE_ADMIN')
	</select>	
	
	<!-- 채팅방 확인 -->
	<select id="checkChatRoom" resultType="chatRoomVO">
		SELECT *
		FROM chat_room
		WHERE 
		  (chat_subject = #{subjectId} AND chat_object = #{objectId})
		  OR
		  (chat_subject = #{objectId} AND chat_object = #{subjectId})
	</select>
	
	<!-- 채팅방 생성 -->
	<insert id="createChatRoom" parameterType="map">
		INSERT INTO CHAT_ROOM
		(CHAT_ROOM_NUM, CHAT_SUBJECT, CHAT_OBJECT)
   	    VALUES((SELECT NVL(MAX(CHAT_ROOM_NUM), 0) + 1 FROM CHAT_ROOM), #{subjectId}, #{objectId})
	</insert>
	
	<!-- 채티방 이름 설정 -->
	<select id="findObjectName" resultType="String">
		SELECT MEMBER_NAME
		FROM MEMBER
		WHERE MEMBER_ID = #{objectId}
	</select>
	
	<!-- 메시지 저장: chat_room에 관련된 정보 가져오기 -->
	<select id="selectChatRoom" resultType="chatRoomVO">
		SELECT * FROM CHAT_ROOM
		WHERE CHAT_ROOM_NUM = #{roomN}
	</select>
	
	<!-- 메시지 저장 -->
	<insert id="saveMessage">
		INSERT INTO CHAT_MESSAGE
		(MESSAGE_ID, MESSAGE_FROM, CONTENT,CREATE_AT, CHAT_ROOM)
		VALUES(CHAT_MESSAGE_SEQ.NEXTVAL,#{chatFrom},#{content}, CURRENT_TIMESTAMP, #{roomN})
	</insert>
	
	<!-- 메시지 목록 가져오기 -->
	<select id="getMessageList" resultType="ChatMessageVO">
	    SELECT  CHAT_ROOM, MESSAGE_FROM, CREATE_AT, CONTENT
		FROM CHAT_MESSAGE
		WHERE CHAT_ROOM = #{roomN}
		ORDER BY create_at
	</select>
	
	<!-- 채팅방 + 최근 대화 -->
	<select id="getChatRoomList" resultType="ChatRoomVO">
		SELECT cr.chat_room_num, 
		       CASE 
		           WHEN cr.chat_subject = #{memberId} THEN cr.chat_object
		           ELSE cr.chat_subject
		       END AS relative_id,
		       m.member_name,
		       cm.message_from, cm.create_at, cm.content
		FROM chat_room cr
		LEFT JOIN (
		    SELECT chat_room, message_from, create_at, content
		    FROM chat_message cm1
		    WHERE cm1.create_at = (
		        SELECT MAX(cm2.create_at)
		        FROM chat_message cm2
		        WHERE cm2.chat_room = cm1.chat_room
		    )
		) cm ON cr.chat_room_num = cm.chat_room
		LEFT JOIN member m ON
		    (cr.chat_subject = #{memberId} AND cr.chat_object = m.member_id)
		    OR (cr.chat_subject = m.member_id AND cr.chat_object = #{memberId})
		WHERE (cr.chat_object = #{memberId} OR cr.chat_subject = #{memberId})
		  AND ((cr.chat_subject = #{memberId} AND cr.chat_object != #{memberId})
		       OR (cr.chat_subject != #{memberId} AND cr.chat_object = #{memberId}))
		ORDER BY cm.create_at DESC
	</select>
</mapper>
